{"ast":null,"code":"import _slicedToArray from \"D:\\\\Tutorials\\\\React\\\\tests\\\\fractal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Tutorials\\\\React\\\\tests\\\\fractal\\\\src\\\\components\\\\Card\\\\Data\\\\Data.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from \"react-dom\";\nimport P5Wrapper from '../P5Wrapper';\n\nvar Data = function Data(props) {\n  var wrapperRef = useRef(null);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      slider = _useState2[0],\n      setSlider = _useState2[1]; // const [frameRate, setframeRate] = useState(null);\n\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      width = _useState4[0],\n      setWidth = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      height = _useState6[0],\n      setHeight = _useState6[1];\n\n  useEffect(function () {\n    wrapperRef.current && setWidth(measureElement(wrapperRef.current).width);\n    wrapperRef.current && setHeight(measureElement(wrapperRef.current).height);\n  }, []); // const onSetFrameRate = (newState, cb) => {\n  // \tsetframeRate(newState);\n  // }\n\n  var onSliderChange = function onSliderChange(event) {\n    setSlider(+event.target.value);\n  };\n\n  var updateSliderValue = function updateSliderValue(value) {\n    setSlider(value);\n  };\n\n  var p5Props = {\n    angle: slider,\n    width: width,\n    height: height,\n    nodeLenghtModifier: 0.8,\n    onUpdateSliderValue: updateSliderValue\n  };\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"draw-wrapper\",\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(P5Wrapper, {\n    p5Props: p5Props // onSetFrameRate={onSetFrameRate}\n    ,\n    onUpdateSliderValue: updateSliderValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, slider), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"range\",\n    min: 0,\n    max: 2 * Math.PI,\n    step: 0.001,\n    value: slider,\n    style: {\n      width: '90%',\n      maxWidth: '900px'\n    },\n    onChange: onSliderChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))));\n};\n\nvar measureElement = function measureElement(element) {\n  var DOMNode = ReactDOM.findDOMNode(element);\n  return {\n    width: DOMNode.offsetWidth,\n    height: DOMNode.offsetHeight\n  };\n};\n\nexport default Data;","map":{"version":3,"sources":["D:\\Tutorials\\React\\tests\\fractal\\src\\components\\Card\\Data\\Data.js"],"names":["React","useState","useEffect","useRef","ReactDOM","P5Wrapper","Data","props","wrapperRef","slider","setSlider","width","setWidth","height","setHeight","current","measureElement","onSliderChange","event","target","value","updateSliderValue","p5Props","angle","nodeLenghtModifier","onUpdateSliderValue","textAlign","Math","PI","maxWidth","element","DOMNode","findDOMNode","offsetWidth","offsetHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport P5Wrapper from '../P5Wrapper'\r\n\r\nconst Data = props => {\r\n\tconst wrapperRef = useRef(null);\r\n\tconst [slider, setSlider] = useState(0);\r\n\t// const [frameRate, setframeRate] = useState(null);\r\n\tconst [width, setWidth] = useState(null);\r\n\tconst [height, setHeight] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\twrapperRef.current && setWidth(measureElement(wrapperRef.current).width);\r\n\t\twrapperRef.current && setHeight(measureElement(wrapperRef.current).height);\r\n\t}, [])\r\n\r\n\t// const onSetFrameRate = (newState, cb) => {\r\n\t// \tsetframeRate(newState);\r\n\t// }\r\n\r\n\tconst onSliderChange = (event) => {\r\n\t\tsetSlider(+event.target.value);\r\n\t}\r\n\r\n\tconst updateSliderValue = (value) => {\r\n\t\tsetSlider(value);\r\n\t}\r\n\r\n\tlet p5Props = {\r\n\t\tangle: slider,\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tnodeLenghtModifier: 0.8,\r\n\t\tonUpdateSliderValue: updateSliderValue\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-12\">\r\n\t\t\t\t<div className=\"draw-wrapper\" ref={wrapperRef}>\r\n\t\t\t\t\t<P5Wrapper\r\n\t\t\t\t\t\tp5Props={p5Props}\r\n\t\t\t\t\t\t// onSetFrameRate={onSetFrameRate}\r\n\t\t\t\t\t\tonUpdateSliderValue={updateSliderValue}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t<strong>{slider}</strong>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\tmin={0} max={2 * Math.PI} step={0.001}\r\n\t\t\t\t\t\t\tvalue={slider}\r\n\t\t\t\t\t\t\tstyle={{ width: '90%', maxWidth: '900px' }}\r\n\t\t\t\t\t\t\tonChange={onSliderChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst measureElement = element => {\r\n\tconst DOMNode = ReactDOM.findDOMNode(element);\r\n\treturn {\r\n\t\twidth: DOMNode.offsetWidth,\r\n\t\theight: DOMNode.offsetHeight,\r\n\t};\r\n}\r\n\r\nexport default Data;"]},"metadata":{},"sourceType":"module"}